import dependencies.Dep
import dependencies.Packages
import dependencies.Versions

apply plugin: 'com.android.application'

android {
    compileSdkVersion Versions.androidCompileSdkVersion

    defaultConfig {
        applicationId Packages.name
        minSdkVersion Versions.androidMinSdkVersion
        targetSdkVersion 29
        versionCode Versions.androidVersionCode
        versionName Versions.androidVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        vectorDrawables.useSupportLibrary = true

        buildConfigField "long", "BUILD_TIMESTAMP", getLastCommitTimestamp() + "L"
        buildConfigField "String[]", "LANGUAGES", "new String[]{\"en_US\",\"de_DE\",\"ru_RU\"}"
        buildConfigField "int", "CANONICAL_VERSION_CODE", "$Versions.androidVersionCode"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':core')

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation "com.google.android.material:material:1.2.0-alpha01"
    implementation "androidx.recyclerview:recyclerview:1.0.0"

    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel:2.1.0"

    implementation 'androidx.multidex:multidex:2.0.1'

    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'

    // Room
    implementation "androidx.room:room-runtime:2.2.1"
    implementation 'androidx.room:room-rxjava2:2.2.1'
    annotationProcessor "androidx.room:room-compiler:2.2.1"

    implementation 'com.google.firebase:firebase-analytics:17.2.1'
    implementation 'com.google.firebase:firebase-messaging:20.0.1'
    implementation 'com.firebase:firebase-jobdispatcher:0.8.5'

    // WorkManager:
    implementation 'androidx.work:work-runtime:2.3.0-alpha03'

    // Dagger2
    implementation Dep.Dagger.core
    annotationProcessor Dep.Dagger.compiler
    implementation Dep.Dagger.androidSupport
    annotationProcessor Dep.Dagger.androidProcessor

    implementation "com.squareup.retrofit2:retrofit:2.6.2"
    implementation "com.squareup.retrofit2:converter-gson:2.6.2"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.6.2"

    // OkHttp:
    implementation 'com.squareup.okhttp3:okhttp:4.2.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.1'

    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation "io.reactivex.rxjava2:rxjava:2.2.12"

    implementation 'com.google.code.gson:gson:2.8.6'

    // Event Bus
    implementation 'org.greenrobot:eventbus:3.1.1'

    implementation 'de.hdodenhof:circleimageview:3.0.1'
    implementation 'com.github.zurche:plain-pie:v0.2.9'
    implementation 'com.github.linger1216:labelview:v1.1.2'
    implementation 'com.github.shivam301296:Android-CustomToast:1.0.1'
    implementation 'com.karumi:dexter:6.0.0'
    implementation 'com.shuhart.stepview:stepview:1.5.0'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.8.5'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.9'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.0'
    implementation 'com.annimon:stream:1.2.1'
    implementation 'org.whispersystems:signal-service-android:2.13.9'
    implementation 'com.github.TutorialsAndroid:KAlertDialog:v7.0.19'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

def getLastCommitTimestamp() {
    new ByteArrayOutputStream().withStream { os ->
        def result = exec {
            executable = 'git'
            args = ['log', '-1', '--pretty=format:%ct']
            standardOutput = os
        }

        return os.toString() + "000"
    }
}

apply plugin: 'com.google.gms.google-services'
